---
layout: post
title: Physics for Programmers
body : physprog 
category: journal
published: false
---

h1. {{ page.title }}

<div class="first"><h2>An object in motion tends to stay in motion</h2><p>There is no such thing as a temporary program.</p></div>
<div class="second"><h2>Two objects cannot occupy the same space at the same time</h2>
<p>You cannot do testing or development in a production database.</p></div>
<div class="third"><h2>If an object has more mass than another, more force is required to give it the same acceleration as the other</h2>
<p>Debugging time increases as a square of the program's size.</p></div>
<div class="fourth"><h2>A gas will always expand to fill the volume of its container</h2>
<p>All possible race conditions shall happen at some point in the life of a program.</p></div>
<div class="fifth"><h2>For every force applied there is an equal force applied in the opposite direction</h2>
<p>Nothing works until it has been tested.</p></div>
<div class="sixth"><h2>Entropy will not spontaneously reverse in a closed system</h2>
<p>All else being equal, no program will fix itself.</p></div>
<div class="seventh"><h2>As speed approaches c, mass approaches infinity</h2>
<p>In a non-scalable architecture, the amount of hardware required to fix your performance problems approaches infinity.</p></div>
<div class="eighth"><h2>For a given Turing machine, there exists an input for which the halting condition is undecidable</h2>
<p>No input from the user or vendor can be trusted to conform to the specification.</p></div>
<div class="ninth"><h2>Any computable axiomatic system powerful enough to describe arithmetic on the natural numbers cannot be both consistent and complete, and the consistency of the axioms cannot be proved within the system</h2>
<p>Any program that tries to be so generalized and configurable that it could handle any kind of task will either fall short of this goal, or will be horribly broken.</p></div>
<div class="tenth"><h2>Every function which would be naturally regarded as computable can be computed by any Turing machine</h2>
<p>You cannot make the impossible happen by upgrading.</p></div>
<div class="eleven"><h2>In a hierarchy, every employee tends to rise to his level of incompetence</h2>
<p>Programmers will always have to do management tasks, and managers will always want Enterprise Rule Engines and administrator privileges so they can do their own programming.</p></div>
<div class="twelve"><h2>Anything is appropriate when you know what you're doing</h2>
<p>Nobody who uses XML knows what they are doing.</p></div>